*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
body {
	font-family: sans-serif;
	color-scheme: dark;
	background: #121212;
	color: #e0e0e0;
}
.navigation {
	position: relative;
	top: 300px;
	left: 250px;
	width: fit-content;
	--burger-width: 50px;
}
/* Burger */
.burger-cont {
	width: var(--burger-width);
	aspect-ratio: 1;
	cursor: pointer;
	display: grid;
	place-items: center;
	position: relative;
	z-index: 10;
	border-radius: 8px;
	/* border: 3px solid red; */
}
.burger-cont:focus-visible {
	outline: none;
	box-shadow: 0 0 0 2px #e0e0e0;
}
.burger__line {
	width: calc(var(--burger-width) * 0.8);
	height: 4px;
	background-color: white;
	border-radius: 100px;
	position: absolute;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
	z-index: 3;
	transition: background-color 0ms ease-in-out 250ms;
}
.burger__line::before,
.burger__line::after {
	content: "";
	width: 100%;
	height: 100%;
	left: 0;
	background-color: white;
	border-radius: 100px;
	position: absolute;
	z-index: 3;
	transform-origin: center;
	rotate: 0;
	transition: rotate 200ms ease-in-out 0ms, translate 200ms ease-in-out 250ms;
}
.burger__line::before {
	translate: 0 -12px;
}
.burger__line::after {
	translate: 0 12px;
}
.burger--active .burger__line {
	background-color: transparent;
	transition: background-color 1ms ease-in-out 200ms;
}
.burger--active .burger__line::before,
.burger--active .burger__line::after {
	translate: 0 0;
	transition: translate 200ms ease-in-out 0ms, rotate 200ms ease-in-out 250ms;
}
.burger--active .burger__line::before {
	rotate: 45deg;
}
.burger--active .burger__line::after {
	rotate: -45deg;
}
/* Nav items */
.nav__item-cont {
	--item-count: 8;
	--item-spacing: calc(var(--item-count) / 2);
	--animation-duration: 60s;
	width: 1px;
	height: 1px;
	position: absolute;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
	animation: rotation var(--animation-duration) linear infinite;
}
.nav__item {
	--item-width: 100px;
	--distance: 180px;
	width: var(--item-width);
	aspect-ratio: 1;
	display: grid;
	place-items: center;
	transform-origin: center;
	border-radius: 50%;
	/* Initial position */
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	/* Position on circle */
	translate: calc(var(--distance) * cos(var(--base-rotation)))
		calc(var(--distance) * sin(var(--base-rotation)));
}
.nav__item a {
	position: relative;
	background-color: inherit;
	text-decoration: none;
	display: grid;
	place-items: center;
	width: 100%;
	height: 100%;
	outline: none;
	transition: border-radius 0.2s ease;
	border-radius: 50%;
	animation: rotation var(--animation-duration) linear reverse infinite;
}
.nav__item a:is(:hover, :focus-visible) {
	border-radius: 30%;
}
/* Stop the animation when items are hovered or focused */
.nav__item-cont:has(.nav__item a:hover),
.nav__item-cont:focus-within,
.nav__item-cont:has(.nav__item a:hover) a,
.nav__item-cont:focus-within a {
	animation-play-state: paused;
}
/* Removes the rotation animation if the user has reduced-motion activated (accessibility setting)*/
@media (prefers-reduced-motion: reduce) {
	.nav__item-cont,
	.nav__item a {
		animation: none;
	}
}
/* to do: remove backgrounds */
.nav__item:nth-of-type(1) {
	--base-rotation: 0;
	background-color: hsl(240, 100%, 12.5%);
}
.nav__item:nth-of-type(2) {
	--base-rotation: (pi / var(--item-spacing)) * 1;
	background-color: hsl(240, 100%, 25%);
}
.nav__item:nth-of-type(3) {
	--base-rotation: (pi / var(--item-spacing)) * 2;
	background-color: hsl(240, 100%, 37.5%);
}
.nav__item:nth-of-type(4) {
	--base-rotation: (pi / var(--item-spacing)) * 3;
	background-color: hsl(240, 100%, 50%);
}
.nav__item:nth-of-type(5) {
	--base-rotation: (pi / var(--item-spacing)) * 4;
	background-color: hsl(240, 100%, 62.5%);
}
.nav__item:nth-of-type(6) {
	--base-rotation: (pi / var(--item-spacing)) * 5;
	background-color: hsl(240, 100%, 75%);
}
.nav__item:nth-of-type(7) {
	--base-rotation: (pi / var(--item-spacing)) * 6;
	background-color: hsl(240, 100%, 87.5%);
}
.nav__item:nth-of-type(8) {
	--base-rotation: (pi / var(--item-spacing)) * 7;
	background-color: hsl(240, 100%, 100%);
}
@keyframes rotation {
	to {
		rotate: 1turn;
	}
}
